{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\pi\\\\projet\\\\client\\\\src\\\\components\\\\util\\\\conversation\\\\Conversation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router';\nimport './conversation.css';\nimport Message from './Messages/Message';\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Conversation(props) {\n  _s();\n\n  const [message, setmessage] = useState('');\n  const to = useParams().to;\n\n  async function sendMessage(e) {\n    e.preventDefault();\n\n    try {\n      const response = await fetch('http://localhost:5000/api/conversation/send', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          message: message,\n          to: to,\n          user: props.userId\n        })\n      });\n      const responseData = await response.json();\n      console.log(responseData.data);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid bg-light\",\n      id: \"chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content d-flex flex-column\",\n        id: \"chat-content\",\n        children: [/*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tools form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => {\n            setmessage(e.target.value);\n          },\n          id: \"newMessage\",\n          className: \"form-control col mr-2\",\n          type: \"text\",\n          name: \"\",\n          placeholder: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          className: \"btn btn-primary \",\n          type: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-paper-plane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Conversation, \"XVz7hcpc661OMuzoZ97+p3ruMSg=\", false, function () {\n  return [useParams];\n});\n\n_c = Conversation;\n\nconst mapStateToProps = state => {\n  return {\n    userId: state.userId\n  };\n};\n\nexport default connect(mapStateToProps, null)(Conversation);\n\nvar _c;\n\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"sources":["C:/Users/user/Desktop/pi/projet/client/src/components/util/conversation/Conversation.js"],"names":["React","useState","useParams","Message","connect","Conversation","props","message","setmessage","to","sendMessage","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","user","userId","responseData","json","console","log","data","error","target","value","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAO,oBAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAGA,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AAAA;;AAE5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAMQ,EAAE,GAAEP,SAAS,GAAGO,EAAtB;;AAGA,iBAAeC,WAAf,CAA2BC,CAA3B,EAA6B;AAEzBA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAAD,EAC5B;AACIC,QAAAA,MAAM,EAAC,MADX;AAEIC,QAAAA,OAAO,EAAC;AACJ,0BAAiB,kBADb;AAEJ,oBAAW;AAFP,SAFZ;AAOIC,QAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAClBZ,UAAAA,OAAO,EAACA,OADU;AAElBE,UAAAA,EAAE,EAACA,EAFe;AAGlBW,UAAAA,IAAI,EAACd,KAAK,CAACe;AAHO,SAAf;AAPT,OAD4B,CAA5B;AAeA,YAAMC,YAAY,GAAG,MAAMT,QAAQ,CAACU,IAAT,EAA3B;AAEQC,MAAAA,OAAO,CAACC,GAAR,CAAYH,YAAY,CAACI,IAAzB;AAIL,KAtBL,CAsBM,OAAOC,KAAP,EAAc;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AAEH;AAEL;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BAEI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAA0C,MAAA,EAAE,EAAC,MAA7C;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,4BAAf;AAA4C,QAAA,EAAE,EAAC,cAA/C;AAAA,gCAEI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eASA;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI;AAAO,UAAA,QAAQ,EAAGhB,CAAD,IAAK;AAAEH,YAAAA,UAAU,CAACG,CAAC,CAACiB,MAAF,CAASC,KAAV,CAAV;AAA4B,WAApD;AAAsD,UAAA,EAAE,EAAC,YAAzD;AAAsE,UAAA,SAAS,EAAC,uBAAhF;AAAwG,UAAA,IAAI,EAAC,MAA7G;AAAoH,UAAA,IAAI,EAAC,EAAzH;AAA4H,UAAA,WAAW,EAAC;AAAxI;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAQ,UAAA,OAAO,EAAEnB,WAAjB;AAA8B,UAAA,SAAS,EAAC,kBAAxC;AAA2D,UAAA,IAAI,EAAC,QAAhE;AAAA,iCACA;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH;;GA/DQL,Y;UAICH,S;;;KAJDG,Y;;AAkET,MAAMyB,eAAe,GAAGC,KAAK,IAAG;AAC9B,SAAO;AAELV,IAAAA,MAAM,EAAEU,KAAK,CAACV;AAFT,GAAP;AAID,CALD;;AAQA,eAAejB,OAAO,CAAC0B,eAAD,EAAiB,IAAjB,CAAP,CAA8BzB,YAA9B,CAAf","sourcesContent":["import React,{useState} from 'react';\r\nimport { useParams } from 'react-router';\r\nimport './conversation.css';\r\nimport Message from './Messages/Message'\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nfunction Conversation(props){\r\n\r\nconst [message, setmessage] = useState('')\r\n\r\nconst to= useParams().to;\r\n\r\n\r\nasync function sendMessage(e){\r\n\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/conversation/send',\r\n      {\r\n          method:'POST',\r\n          headers:{\r\n              'Content-Type' : 'application/json',\r\n              'Accept' : 'application/json'\r\n          \r\n          },\r\n          body:JSON.stringify({\r\n            message:message,\r\n            to:to,\r\n            user:props.userId\r\n\r\n          })\r\n      });\r\n      const responseData = await response.json();\r\n  \r\n              console.log(responseData.data)\r\n              \r\n      \r\n        \r\n        } catch (error) {\r\n            console.log(error);\r\n            \r\n        }\r\n  \r\n   }\r\n\r\n    \r\n    return(\r\n        <div className=\"container\">\r\n\r\n            <div className=\"container-fluid bg-light\" id=\"chat\">\r\n            <div className=\"content d-flex flex-column\" id=\"chat-content\">\r\n\r\n                <Message/>\r\n                <Message/>\r\n                <Message/>\r\n   \r\n\r\n            </div>\r\n            <div className=\"tools form-row\">\r\n                <input onChange={(e)=>{ setmessage(e.target.value) }} id=\"newMessage\" className=\"form-control col mr-2\" type=\"text\" name=\"\" placeholder=\"Message\"  ></input>\r\n\r\n                <button onClick={sendMessage} className=\"btn btn-primary \" type=\"button\">\r\n                <i className=\"far fa-paper-plane\"></i>\r\n                </button>\r\n            </div>\r\n            </div>\r\n  </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n  return {\r\n    \r\n    userId: state.userId,\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,null)(Conversation);  "]},"metadata":{},"sourceType":"module"}