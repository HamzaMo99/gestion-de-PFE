{"ast":null,"code":"var _jsxFileName = \"D:\\\\projet\\\\Gestion-de-PFE\\\\client\\\\src\\\\components\\\\util\\\\fileUpload\\\\FileUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport Message from './Message';\nimport Progress from './Progress';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileUpload = props => {\n  _s();\n\n  // const [file, setFile] = useState('');\n  const [filename, setFilename] = useState('Choose File'); // const [uploadedFile, setUploadedFile] = useState({});\n\n  const [message, setMessage] = useState('');\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n\n  const onChange = e => {\n    console.log(e.target.files[0]);\n    props.setFile(e.target.files[0]);\n    setFilename(e.target.files[0].name);\n  }; // const onSubmit = async e => {\n  //   e.preventDefault();\n  //   const formData = new FormData();\n  //   formData.append('file', file);\n  //   try {\n  //     const res = await axios.post('http://localhost:5000/students/upload', formData, {\n  //       headers: {\n  //         'Content-Type': 'multipart/form-data'\n  //       },\n  //       onUploadProgress: progressEvent => {\n  //         setUploadPercentage(\n  //           parseInt(\n  //             Math.round((progressEvent.loaded * 100) / progressEvent.total)\n  //           )\n  //         );\n  //         // Clear percentage\n  //         setTimeout(() => setUploadPercentage(0), 10000);\n  //       }\n  //     }).then(res =>{\n  //       console.log(res);\n  //     });\n  //const { fileName, filePath } = res.data;\n  //setUploadedFile({ fileName, filePath });\n  //     setMessage('File Uploaded');\n  //   } catch (err) {\n  //     if (err.response.status === 500) {\n  //       setMessage('erreur dans le server !!');\n  //     } else {\n  //       setMessage(err.response.data.msg);\n  //     }\n  //   }\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [message ? /*#__PURE__*/_jsxDEV(Message, {\n      msg: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 18\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom-file mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          className: \"custom-file-input\",\n          id: \"customFile\",\n          accept: \"application/pdf\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"custom-file-label\",\n          htmlFor: \"customFile\",\n          children: filename\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FileUpload, \"YIygXbhKEAYuaYq/q575fMcFAWU=\");\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["D:/projet/Gestion-de-PFE/client/src/components/util/fileUpload/FileUpload.js"],"names":["React","Fragment","useState","Message","Progress","axios","FileUpload","props","filename","setFilename","message","setMessage","uploadPercentage","setUploadPercentage","onChange","e","console","log","target","files","setFile","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,aAAD,CAAxC,CAF4B,CAG7B;;AACC,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,gBAAD,EAAmBC,mBAAnB,IAA0CX,QAAQ,CAAC,CAAD,CAAxD;;AAEA,QAAMY,QAAQ,GAAGC,CAAC,IAAI;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAAZ;AACAZ,IAAAA,KAAK,CAACa,OAAN,CAAcL,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAAd;AACAV,IAAAA,WAAW,CAACM,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,EAAkBE,IAAnB,CAAX;AACD,GAJD,CAP4B,CAa5B;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEI;AAEA;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE,QAAC,QAAD;AAAA,eACGX,OAAO,gBAAG,QAAC,OAAD;AAAS,MAAA,GAAG,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA,YAAH,GAA+B,IADzC,eAEE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAC,mBAFZ;AAGE,UAAA,EAAE,EAAC,YAHL;AAIE,UAAA,MAAM,EAAC,iBAJT;AAKE,UAAA,QAAQ,EAAEI;AALZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAO,UAAA,SAAS,EAAC,mBAAjB;AAAqC,UAAA,OAAO,EAAC,YAA7C;AAAA,oBACGN;AADH;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA9ED;;GAAMF,U;;KAAAA,U;AA+EN,eAAeA,UAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport Message from './Message';\r\nimport Progress from './Progress';\r\nimport axios from 'axios';\r\n\r\nconst FileUpload = (props) => {\r\n  // const [file, setFile] = useState('');\r\n  const [filename, setFilename] = useState('Choose File');\r\n // const [uploadedFile, setUploadedFile] = useState({});\r\n  const [message, setMessage] = useState('');\r\n  const [uploadPercentage, setUploadPercentage] = useState(0);\r\n\r\n  const onChange = e => { \r\n    console.log(e.target.files[0])\r\n    props.setFile(e.target.files[0]);\r\n    setFilename(e.target.files[0].name);\r\n  };\r\n\r\n  // const onSubmit = async e => {\r\n  //   e.preventDefault();\r\n  //   const formData = new FormData();\r\n  //   formData.append('file', file);\r\n\r\n  //   try {\r\n  //     const res = await axios.post('http://localhost:5000/students/upload', formData, {\r\n  //       headers: {\r\n  //         'Content-Type': 'multipart/form-data'\r\n  //       },\r\n  //       onUploadProgress: progressEvent => {\r\n  //         setUploadPercentage(\r\n  //           parseInt(\r\n  //             Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n  //           )\r\n  //         );\r\n\r\n  //         // Clear percentage\r\n  //         setTimeout(() => setUploadPercentage(0), 10000);\r\n  //       }\r\n  //     }).then(res =>{\r\n  //       console.log(res);\r\n  //     });\r\n\r\n      //const { fileName, filePath } = res.data;\r\n\r\n      //setUploadedFile({ fileName, filePath });\r\n\r\n  //     setMessage('File Uploaded');\r\n  //   } catch (err) {\r\n  //     if (err.response.status === 500) {\r\n  //       setMessage('erreur dans le server !!');\r\n  //     } else {\r\n  //       setMessage(err.response.data.msg);\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <Fragment>\r\n      {message ? <Message msg={message} /> : null}\r\n      <form >\r\n        <div className='custom-file mb-4'>\r\n          <input\r\n            type='file'\r\n            className='custom-file-input'\r\n            id='customFile'\r\n            accept=\"application/pdf\"\r\n            onChange={onChange} \r\n          />\r\n          <label className='custom-file-label' htmlFor='customFile'>\r\n            {filename}\r\n          </label>\r\n        </div>\r\n\r\n        {/* <Progress percentage={uploadPercentage} />\r\n\r\n        { <input\r\n          type='submit'\r\n          value='Upload'\r\n          className='btn btn-primary btn-block mt-4' \r\n        /> } */}\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default FileUpload;\r\n"]},"metadata":{},"sourceType":"module"}